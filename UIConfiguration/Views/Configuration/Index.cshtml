@using UIConfiguration.Models
@model SnowwhiteUser
@{
    ViewBag.Title = "Mirror-Configuration";
}

@Styles.Render("~/Content/gridstack")
@Scripts.Render("~/bundles/gridstack")
<style type="text/css">
    .grid-stack {
        background: lightgoldenrodyellow;
    }

    .grid-stack-item-content {
        color: #2c3e50;
        text-align: center;
        background-color: #18bc9c;
    }
</style>

<h2>Hello @Model.FirstName @Model.LastName !</h2>
@if (Model.SpeechID == null || Model.SpeechID.Equals(""))
{
    <p>You have to record your voice!</p>
    <p></p>
    <ol style="list-style-type: decimal">
        <li>Check wheather your mirror is on</li>
        <li>Press <button class="btn btn-primary btn-circle" id="startRecording"><i class="fa fa-microphone"></i></button> to start recording</li>
        <li>Go to the mirror</li>
        <li>There you will see a new window where you can record your voice.</li>
    </ol>
}

<div class="container-fluid">
    <h1>AniJS demo</h1>

    <div>
        <a class="btn btn-default" id="add-widget" href="#">Add Widget</a>
    </div>

    <div>
        <h4>Widget added</h4>
    </div>

    <br />

    <div class="grid-stack">
    </div>
</div>

@section Scripts
{   
<script>

    $(document).ready(function () {
        $('.grid-stack').gridstack();
        var self = this;
        this.grid = $('.grid-stack').data('gridstack');
        $('.grid-stack').on('added', function (event, items) {
            // add anijs data to gridstack item
            for (var i = 0; i < items.length; i++) {
                $(items[i].el[0]).attr('data-anijs', 'if: added, do: swing animated, after: $removeAnimations, on: $gridstack');
            }
            AniJS.run();
            self.gridstackNotifier = AniJS.getNotifier('gridstack');
            // fire added event!
            self.gridstackNotifier.dispatchEvent('added');
        });
        $('#add-widget').click(function () {
            addNewWidget();
        });

        function addNewWidget() {
            var grid = $('.grid-stack').data('gridstack');
            grid.addWidget($('<div><div class="grid-stack-item-content"></div></div>'), 0, 0, Math.floor(1 + 3 * Math.random()), Math.floor(1 + 3 * Math.random()), true);
        }

        var animationHelper = AniJS.getHelper();

        //Defining removeAnimations to remove existing animations
        animationHelper.removeAnimations = function (e, animationContext) {
            $('.grid-stack-item').attr('data-anijs', '');
        };
    });

    $("#startRecording").on("click", function(){
        $.ajax
        ({
            url: '@Url.Action("SetDesireRecord", "Account")',
            async: true
        }).done(function (result)
        {
            var test;
            if (result == "ready")
            {
                alert("Go to your mirror and record your voice!");
            }
        }).fail(function(result)
        {
            alert("error");
        });
        toggleButton();
    });

    function toggleButton()
    {
        var btn = $("#startRecording");
        if (btn.hasClass("btn-primary"))
        {
            btn.removeClass("btn-primary");
            btn.addClass("btn-danger");
        }
        else
        {
            btn.removeClass("btn-danger");
            btn.addClass("btn-primary");
        }
    }
</script>
}
