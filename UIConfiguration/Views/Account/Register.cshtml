@model UIConfiguration.Models.RegisterViewModel
@{
    ViewBag.Title = "Registration";
}

<div class="section container row">
    <h2 class="header blue-text"> @ViewBag.Title</h2>
    
    <div class="row">
        <div class="col s12 light">
            Here you can setup an account for your own Snow White mirror.
            With your own account you are able to share your mirror with your friends and family,
            whilst keeping your personalized data private. Connect your mirror with your Facebook or Twitter account
            to stay always up to date.
        </div>
    </div>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "col s12", id = "register-form", role = "form", enctype = "multipart/form-data", accept = "image/x-png,image/jpeg, image/jpeg" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="input-field col s6">
                @Html.LabelFor(m => m.FirstName, new { @class = "validate" })
                @Html.TextBoxFor(m => m.FirstName, new {@name = "firstname" })
            </div>
            <div class="input-field col s6">
                @Html.LabelFor(m => m.LastName, new { @class = "validate" })
                @Html.TextBoxFor(m => m.LastName, new { @name = "lastname" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(m => m.Email, new { @class = "validate" })
                @Html.TextBoxFor(m => m.Email, new { @name = "email" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(m => m.Password, new { @class = "validate" })
                @Html.PasswordFor(m => m.Password, new { @name = "password" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "validate" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @name = "passwordConfirm" })
            </div>
        </div>

        <div class="file-field input-field">
            <div class="btn waves-effect waves-light blue darken-2">
                <span>Thumbnail</span>
                <input type="file" id="thumbnail" size="23" runat="server">
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text" placeholder="Upload your custom thumbnail">
            </div>
        </div>

        <div class="row">
            @Html.ValidationSummary("", new { @class = "red-text light" })
        </div>

        <div class="row right-align">
            <button class="btn waves-effect waves-light blue darken-2" type="reset" name="action">Reset</button>
            <button class="btn waves-effect waves-light blue darken-2" type="submit" name="action">Submit</button>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
