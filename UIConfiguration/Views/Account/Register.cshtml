@model UIConfiguration.Models.RegisterViewModel
@{
    ViewBag.Title = "Registration";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", id = "register-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Register a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @name = "firstname" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @name = "lastname" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @name = "email" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @name = "password" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @name = "passwordConfirm" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.LabelFor(m => m.SpeechID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SpeechID, new { @class = "", @readonly = "readonly", @id = "speaker-id", @name = "speechId" })
            <button type="button" class="btn btn-primary btn-circle btn-lg" id="btnRecord"><i class="fa fa-microphone"></i></button>
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.Thumbnail, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <input type="file" id="thumbnail" class="form-control" name="thumbnail" size="23" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="reset" class="btn btn-default" value="Reset" />
            <input type="submit" class="btn btn-primary" value="Registrate" />
        </div>
    </div>
}
        
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        //// add pop-ups
        //function toggleRecordBtn() {
        //    var recordBtn = $("#btnRecord");
        //    if (recordBtn.hasClass("btn-primary")) {
        //        recordBtn.removeClass("btn-primary");
        //        recordBtn.addClass("btn-danger");
        //    } else {
        //        recordBtn.removeClass("btn-danger");
        //        recordBtn.addClass("btn-primary");
        //    }
        //}

        //$("#btnRecord").on("click", function () {
        //    toggleRecordBtn();
        //    // call mirror
        //});
    </script>
}
